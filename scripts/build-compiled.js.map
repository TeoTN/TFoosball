{"version":3,"sources":["build.js"],"names":[],"mappings":"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","file":"build-compiled.js","sourcesContent":["process.env.NODE_ENV = 'production';\n\nvar chalk = require('chalk');\nvar fs = require('fs');\nvar path = require('path');\nvar filesize = require('filesize');\nvar gzipSize = require('gzip-size').sync;\nvar rimrafSync = require('rimraf').sync;\nvar webpack = require('webpack');\nvar config = require('../config/webpack.config.prod');\nvar paths = require('../config/paths');\n\n// Remove all content but keep the directory so that\n// if you're in it, you don't end up in Trash\nrimrafSync(paths.appBuild + '/*');\n\nconsole.log('Creating an optimized production build...');\nwebpack(config).run(function(err, stats) {\n  if (err) {\n    console.error('Failed to create a production build. Reason:');\n    console.error(err.message || err);\n    process.exit(1);\n  }\n\n  console.log(chalk.green('Compiled successfully.'));\n  console.log();\n\n  console.log('File sizes after gzip:');\n  console.log();\n  var assets = stats.toJson().assets\n    .filter(asset => /\\.(js|css)$/.test(asset.name))\n    .map(asset => {\n      var fileContents = fs.readFileSync(paths.appBuild + '/' + asset.name);\n      var size = gzipSize(fileContents);\n      return {\n        folder: path.join('build', path.dirname(asset.name)),\n        name: path.basename(asset.name),\n        size: size,\n        sizeLabel: filesize(size)\n      };\n    });\n  assets.sort((a, b) => b.size - a.size);\n\n  var longestSizeLabelLength = Math.max.apply(null,\n    assets.map(a => a.sizeLabel.length)\n  );\n  assets.forEach(asset => {\n    var sizeLabel = asset.sizeLabel;\n    if (sizeLabel.length < longestSizeLabelLength) {\n      var rightPadding = ' '.repeat(longestSizeLabelLength - sizeLabel.length);\n      sizeLabel += rightPadding;\n    }\n    console.log(\n      '  ' + chalk.green(sizeLabel) +\n      '  ' + chalk.dim(asset.folder + path.sep) + chalk.cyan(asset.name)\n    );\n  });\n  console.log();\n\n  var openCommand = process.platform === 'win32' ? 'start' : 'open';\n  var homepagePath = require(paths.appPackageJson).homepage;\n  if (homepagePath) {\n    console.log('You can now publish them at ' + homepagePath + '.');\n    console.log('For example, if you use GitHub Pages:');\n    console.log();\n    console.log('  git commit -am \"Save local changes\"');\n    console.log('  git checkout -B gh-pages');\n    console.log('  git add -f build');\n    console.log('  git commit -am \"Rebuild website\"');\n    console.log('  git filter-branch -f --prune-empty --subdirectory-filter build');\n    console.log('  git push -f origin gh-pages');\n    console.log('  git checkout -');\n    console.log();\n  } else {\n    console.log('You can now serve them with any static server.');\n    console.log('For example:');\n    console.log();\n    console.log('  npm install -g pushstate-server');\n    console.log('  pushstate-server build');\n    console.log('  ' + openCommand + ' http://localhost:9000');\n    console.log();\n    console.log(chalk.dim('The project was built assuming it is hosted at the root.'));\n    console.log(chalk.dim('Set the \"homepage\" field in package.json to override this.'));\n    console.log(chalk.dim('For example, \"homepage\": \"http://user.github.io/project\".'));\n  }\n  console.log();\n});\n"]}