{"version":3,"sources":["start.js"],"names":[],"mappings":"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","file":"start-compiled.js","sourcesContent":["process.env.NODE_ENV = 'development';\n\nvar path = require('path');\nvar chalk = require('chalk');\nvar webpack = require('webpack');\nvar WebpackDevServer = require('webpack-dev-server');\nvar execSync = require('child_process').execSync;\nvar opn = require('opn');\nvar detect = require('./utils/detectPort');\nvar prompt = require('./utils/prompt');\nvar config = require('../config/webpack.config.dev');\n\n// Tools like Cloud9 rely on this\nvar DEFAULT_PORT = process.env.PORT || 3000;\nvar compiler;\n\n// TODO: hide this behind a flag and eliminate dead code on eject.\n// This shouldn't be exposed to the user.\nvar handleCompile;\nvar isSmokeTest = process.argv.some(arg => arg.indexOf('--smoke-test') > -1);\nif (isSmokeTest) {\n  handleCompile = function (err, stats) {\n    if (err || stats.hasErrors() || stats.hasWarnings()) {\n      process.exit(1);\n    } else {\n      process.exit(0);\n    }\n  };\n}\n\nvar friendlySyntaxErrorLabel = 'Syntax error:';\n\nfunction isLikelyASyntaxError(message) {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n}\n\n// This is a little hacky.\n// It would be easier if webpack provided a rich error object.\n\nfunction formatMessage(message) {\n  return message\n    // Make some common errors shorter:\n    .replace(\n      // Babel syntax error\n      'Module build failed: SyntaxError:',\n      friendlySyntaxErrorLabel\n    )\n    .replace(\n      // Webpack file not found error\n      /Module not found: Error: Cannot resolve 'file' or 'directory'/,\n      'Module not found:'\n    )\n    // Internal stacks are generally useless so we strip them\n    .replace(/^\\s*at\\s.*:\\d+:\\d+[\\s\\)]*\\n/gm, '') // at ... ...:x:y\n    // Webpack loader names obscure CSS filenames\n    .replace('./~/css-loader!./~/postcss-loader!', '');\n}\n\nfunction clearConsole() {\n  process.stdout.write('\\x1bc');\n}\n\nfunction setupCompiler(port) {\n  compiler = webpack(config, handleCompile);\n\n  compiler.plugin('invalid', function() {\n    clearConsole();\n    console.log('Compiling...');\n  });\n\n  compiler.plugin('done', function(stats) {\n    clearConsole();\n    var hasErrors = stats.hasErrors();\n    var hasWarnings = stats.hasWarnings();\n    if (!hasErrors && !hasWarnings) {\n      console.log(chalk.green('Compiled successfully!'));\n      console.log();\n      console.log('The app is running at http://localhost:' + port + '/');\n      console.log();\n      return;\n    }\n\n    var json = stats.toJson();\n    var formattedErrors = json.errors.map(message =>\n      'Error in ' + formatMessage(message)\n    );\n    var formattedWarnings = json.warnings.map(message =>\n      'Warning in ' + formatMessage(message)\n    );\n\n    if (hasErrors) {\n      console.log(chalk.red('Failed to compile.'));\n      console.log();\n      if (formattedErrors.some(isLikelyASyntaxError)) {\n        // If there are any syntax errors, show just them.\n        // This prevents a confusing ESLint parsing error\n        // preceding a much more useful Babel syntax error.\n        formattedErrors = formattedErrors.filter(isLikelyASyntaxError);\n      }\n      formattedErrors.forEach(message => {\n        console.log(message);\n        console.log();\n      });\n      // If errors exist, ignore warnings.\n      return;\n    }\n\n    if (hasWarnings) {\n      console.log(chalk.yellow('Compiled with warnings.'));\n      console.log();\n      formattedWarnings.forEach(message => {\n        console.log(message);\n        console.log();\n      });\n\n      console.log('You may use special comments to disable some warnings.');\n      console.log('Use ' + chalk.yellow('// eslint-disable-next-line') + ' to ignore the next line.');\n      console.log('Use ' + chalk.yellow('/* eslint-disable */') + ' to ignore all warnings in a file.');\n    }\n  });\n}\n\nfunction openBrowser(port) {\n  if (process.platform === 'darwin') {\n    try {\n      // Try our best to reuse existing tab\n      // on OS X Google Chrome with AppleScript\n      execSync('ps cax | grep \"Google Chrome\"');\n      execSync(\n        'osascript ' +\n        path.resolve(__dirname, './utils/chrome.applescript') +\n        ' http://localhost:' + port + '/'\n      );\n      return;\n    } catch (err) {\n      // Ignore errors.\n    }\n  }\n  // Fallback to opn\n  // (It will always open new tab)\n  opn('http://localhost:' + port + '/');\n}\n\nfunction runDevServer(port) {\n  new WebpackDevServer(compiler, {\n    historyApiFallback: true,\n    hot: true, // Note: only CSS is currently hot reloaded\n    publicPath: config.output.publicPath,\n    quiet: true,\n    watchOptions: {\n      ignored: /node_modules/\n    }\n  }).listen(port, (err, result) => {\n    if (err) {\n      return console.log(err);\n    }\n\n    clearConsole();\n    console.log(chalk.cyan('Starting the development server...'));\n    console.log();\n    openBrowser(port);\n  });\n}\n\nfunction run(port) {\n  setupCompiler(port);\n  runDevServer(port);\n}\n\ndetect(DEFAULT_PORT).then(port => {\n  if (port === DEFAULT_PORT) {\n    run(port);\n    return;\n  }\n\n  clearConsole();\n  var question =\n    chalk.yellow('Something is already running at port ' + DEFAULT_PORT + '.') +\n    '\\n\\nWould you like to run the app at another port instead?';\n\n  prompt(question, true).then(shouldChangePort => {\n    if (shouldChangePort) {\n      run(port);\n    }\n  });\n});\n"]}