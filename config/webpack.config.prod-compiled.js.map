{"version":3,"sources":["webpack.config.prod.js"],"names":[],"mappings":"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","file":"webpack.config.prod-compiled.js","sourcesContent":["var path = require('path');\nvar autoprefixer = require('autoprefixer');\nvar webpack = require('webpack');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar url = require('url');\nvar paths = require('./paths');\n\nvar homepagePath = require(paths.appPackageJson).homepage;\nvar publicPath = homepagePath ? url.parse(homepagePath).pathname : '/';\nif (!publicPath.endsWith('/')) {\n  // Prevents incorrect paths in file-loader\n  publicPath += '/';\n}\n\nmodule.exports = {\n  bail: true,\n  devtool: 'source-map',\n  entry: [\n    require.resolve('./polyfills'),\n    path.join(paths.appSrc, 'index')\n  ],\n  output: {\n    path: paths.appBuild,\n    filename: 'static/js/[name].[chunkhash:8].js',\n    chunkFilename: 'static/js/[name].[chunkhash:8].chunk.js',\n    publicPath: publicPath\n  },\n  resolve: {\n    extensions: ['', '.js', '.json'],\n    alias: {\n      // This `alias` section can be safely removed after ejection.\n      // We do this because `babel-runtime` may be inside `react-scripts`,\n      // so when `babel-plugin-transform-runtime` imports it, it will not be\n      // available to the app directly. This is a temporary solution that lets\n      // us ship support for generators. However it is far from ideal, and\n      // if we don't have a good solution, we should just make `babel-runtime`\n      // a dependency in generated projects.\n      // See https://github.com/facebookincubator/create-react-app/issues/255\n      'babel-runtime/regenerator': require.resolve('babel-runtime/regenerator')\n    }\n  },\n  resolveLoader: {\n    root: paths.ownNodeModules,\n    moduleTemplates: ['*-loader']\n  },\n  module: {\n    preLoaders: [\n      {\n        test: /\\.js$/,\n        loader: 'eslint',\n        include: paths.appSrc\n      }\n    ],\n    loaders: [\n      {\n        test: /\\.js$/,\n        include: paths.appSrc,\n        loader: 'babel',\n        query: require('./babel.prod')\n      },\n      {\n        test: /\\.css$/,\n        include: [paths.appSrc, paths.appNodeModules],\n        // Disable autoprefixer in css-loader itself:\n        // https://github.com/webpack/css-loader/issues/281\n        // We already have it thanks to postcss.\n        loader: ExtractTextPlugin.extract('style', 'css?-autoprefixer!postcss')\n      },\n      {\n        test: /\\.json$/,\n        include: [paths.appSrc, paths.appNodeModules],\n        loader: 'json'\n      },\n      {\n        test: /\\.(jpg|png|gif|eot|svg|ttf|woff|woff2)(\\?.*)?$/,\n        include: [paths.appSrc, paths.appNodeModules],\n        loader: 'file',\n        query: {\n          name: 'static/media/[name].[hash:8].[ext]'\n        }\n      },\n      {\n        test: /\\.(mp4|webm)(\\?.*)?$/,\n        include: [paths.appSrc, paths.appNodeModules],\n        loader: 'url',\n        query: {\n          limit: 10000,\n          name: 'static/media/[name].[hash:8].[ext]'\n        }\n      }\n    ]\n  },\n  eslint: {\n    // TODO: consider separate config for production,\n    // e.g. to enable no-console and no-debugger only in prod.\n    configFile: path.join(__dirname, 'eslint.js'),\n    useEslintrc: false\n  },\n  postcss: function() {\n    return [autoprefixer];\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      inject: true,\n      template: paths.appHtml,\n      favicon: paths.appFavicon,\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeRedundantAttributes: true,\n        useShortDoctype: true,\n        removeEmptyAttributes: true,\n        removeStyleLinkTypeAttributes: true,\n        keepClosingSlash: true,\n        minifyJS: true,\n        minifyCSS: true,\n        minifyURLs: true\n      }\n    }),\n    new webpack.DefinePlugin({ 'process.env.NODE_ENV': '\"production\"' }),\n    new webpack.optimize.OccurrenceOrderPlugin(),\n    new webpack.optimize.DedupePlugin(),\n    new webpack.optimize.UglifyJsPlugin({\n      compress: {\n        screw_ie8: true,\n        warnings: false\n      },\n      mangle: {\n        screw_ie8: true\n      },\n      output: {\n        comments: false,\n        screw_ie8: true\n      }\n    }),\n    new ExtractTextPlugin('static/css/[name].[contenthash:8].css')\n  ]\n};\n"]}